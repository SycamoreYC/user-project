plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id "io.freefair.lombok" version "5.1.0"
}

group = 'com.java'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.4"
}

jacocoTestReport {
	reports {
		xml.enabled false
		html.enabled true
		html.destination file("${buildDir}/jacoco/report")
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.05
			}
		}
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification


def profileName = System.getProperty("profile") ?: "dev"
processResources {
	filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [profileName: profileName]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.postgresql:postgresql:42.2.5'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.flywaydb:flyway-core:5.+'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
	implementation 'io.micrometer:micrometer-core:latest.integration'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
}

ext {
	set('springCloudVersion', "Hoxton.SR6")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

